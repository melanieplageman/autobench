- name: Install fio
  become: yes
  apt: name=fio

- name: Install schedtool
  become: yes
  apt: name=schedtool

- name: Copy fio job file to target host
  copy:
    content: "{{ fio_job_file }}"
    dest: job.fio
  when: fio_job_file is defined

- name: Copy fio job file to target host 
  template:
    src: profile.fio.j2
    dest: job.fio
  when: fio_job_file is not defined

- name: Create an fio output directory on the target host
  file:
    path: fio_output
    state: directory

- name: Run fio jobs
  command: >
    fio
      --directory="{{ fio_target_directory | quote }}"
      --output-format=json+ 
      --output="{{ ansible_user_dir }}/fio_output/{{ fio_result_file }}"
    "{{ ansible_user_dir }}/job.fio"
  args:
    chdir: "{{ fio_target_directory }}"

- name: Delete output of fio write job 1
  file:
    path: "{{ fio_target_directory }}/{{ fio_write_job1_data_filename }}"
    state: absent
  when: fio_write_job1_data_filename is defined

- name: Delete output of fio write job 2
  file:
    path: "{{ fio_target_directory }}/{{ fio_write_job2_data_filename }}"
    state: absent
  when: fio_write_job2_data_filename is defined

- name: Copy fio output file from host
  fetch:
    src: "{{ ansible_user_dir }}/fio_output/{{ fio_result_file }}"
    dest: "{{ playbook_dir }}/results/fio/"
    flat: yes

- name: Append settings to index file
  vars:
    index: "{{ lookup('file', fio_index_file) | from_json }}"
    run_info:
      settings:
        schedtool: False
        IUT: 
          vm: "{{ hostvars[inventory_hostname]['vm_instance_info'] }}"
          disk: "{{ hostvars[inventory_hostname]['vm_data_disk_specs'] }}"
        kernel: 
          nr_requests: "{{ disk_kernel_nr_requests }}"
          max_sectors_kb: "{{ disk_kernel_max_sectors_kb }}"
          read_ahead_kb: "{{ disk_kernel_read_ahead_kb }}"
          queue_depth: "{{ disk_kernel_queue_depth }}"
          io_scheduler: "{{ disk_kernel_io_scheduler }}"
          wbt_lat_usec: "{{ disk_kernel_wbt_lat_usec }}"
      result_file: "{{ fio_result_file }}"
  copy:
    content: "{{ (index + [run_info]) | to_json }}"
    dest: "{{ fio_index_file }}"
  delegate_to: localhost


# vim: set ft=yaml.ansible:
