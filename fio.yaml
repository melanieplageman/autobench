- name: Set up and run FIO jobs
  hosts: f2_big_disk_vms, f4_big_disk_vms, f8_big_disk_vms, f16_big_disk_vms, f32_big_disk_vms, f48_big_disk_vms, f64_big_disk_vms, f72_big_disk_vms
  vars:
    schedtool: False
    workload_id: 1
    workload_size: large
    ideal_settings: settings-1
    delete_fio_read_files: 1
  tasks:
  - set_fact:
      host_instance_disk: "{{ hostvars[inventory_hostname]['vm_instance_info']['specs']['instance_type'] }}_{{ hostvars[inventory_hostname]['vm_data_disk_specs']['size_gb'] }}"

  - name: Lookup my settings
    set_fact:
      settings: "{{ (lookup('file', ideal_settings + '.json') | from_json).get(host_instance_disk) }}"

  - debug:
      msg: "{{ settings }}"

  - set_fact:
      disk_kernel_max_sectors_kb: "{{ settings.disk_kernel_max_sectors_kb }}"
    when: settings.disk_kernel_max_sectors_kb is defined

  - set_fact:
      disk_kernel_read_ahead_kb: "{{ settings.disk_kernel_read_ahead_kb }}"
    when: settings.disk_kernel_read_ahead_kb is defined

  - set_fact:
      disk_kernel_queue_depth: "{{ settings.disk_kernel_queue_depth }}"
    when: settings.disk_kernel_queue_depth is defined

  - set_fact:
      disk_kernel_nr_requests: "{{ settings.disk_kernel_nr_requests }}"
    when: settings.disk_kernel_nr_requests is defined

  - set_fact:
      disk_kernel_io_scheduler: "{{ settings.disk_kernel_io_scheduler }}"
    when: settings.disk_kernel_io_scheduler is defined

  - set_fact:
      disk_kernel_mqdeadline_fifo_batch: "{{ settings.disk_kernel_mqdeadline_fifo_batch }}"
    when: settings.disk_kernel_mqdeadline_fifo_batch is defined and settings.disk_kernel_io_scheduler == 'mq-deadline'

  - set_fact:
      disk_kernel_mqdeadline_writes_starved: "{{ settings.disk_kernel_mqdeadline_writes_starved }}"
    when: settings.disk_kernel_mqdeadline_writes_starved is defined and settings.disk_kernel_io_scheduler == 'mq-deadline'

  - set_fact:
      disk_kernel_bfq_low_latency: "{{ settings.disk_kernel_bfq_low_latency }}"
    when: settings.disk_kernel_bfq_low_latency is defined and settings.disk_kernel_io_scheduler == 'bfq'

  - set_fact:
      disk_kernel_wbt_lat_usec: "{{ settings.disk_kernel_wbt_lat_usec }}"
    when: settings.disk_kernel_wbt_lat_usec is defined

  - set_fact:
      disk_kernel_rotational: "{{ settings.disk_kernel_rotational }}"
    when: settings.disk_kernel_rotational is defined

  - name: Set kernel device parameters and run fio
    block:
      - name: Format and trim the disk
        include_role:
          name: data_disk
          tasks_from: reset

      - name: Set kernel device parameters
        include_role:
          name: disk_kernel

      - name: Run fio jobs
        vars:
          fio_result_file: "{{ inventory_hostname }}-{{ ideal_settings }}.json"
        include_role:
          name: fio

    rescue:
      - name: Print when errors
        debug:
          msg: "Skipping this combination"

# vim: set ft=yaml.ansible:
